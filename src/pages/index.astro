---
import { desc, between } from "drizzle-orm";
import Layout from "../layouts/Layout.astro";
import { db, listeningHistory } from "../lib/db";
import Song from "../components/Song.astro";
import ClockIcon from "../icons/ClockIcon.astro";
import { colors, PAGE_SIZE } from "../lib/constants";
import { getMonthRange } from "../lib/util";

const page = parseInt(Astro.url.searchParams.get("playlist") ?? "1");

const [startOfMonth, endOfMonth] = getMonthRange();

const [latestPlaying, ...rest] = await db
  .select()
  .from(listeningHistory)
  .orderBy(desc(listeningHistory.listenedAt))
  .where(between(listeningHistory.listenedAt, startOfMonth, endOfMonth))
  .offset(PAGE_SIZE * (page - 1))
  .limit(PAGE_SIZE);

if (!latestPlaying) return Astro.redirect("/about");

const color = colors[latestPlaying.artist.charCodeAt(0) % colors.length];

const timeElapsed_ms =
  Date.now() - new Date(latestPlaying.listenedAt).getTime();
const song_length_ms = latestPlaying.length;
const isPlaying = timeElapsed_ms < song_length_ms;

const title = page === 1 ? "Rub Radio" : `Rub Radio - ${page}`;
---

<Layout {title}>
  <div
    class="flex-grow text-white h-screen overflow-y-scroll scrollbar-hide w-4/5"
  >
    <section
      class={`flex items-end space-x-7 bg-gradient-to-b to-black ${color} h-80 text-white p-8`}
    >
      <img
        class:list={[
          "rounded-full w-32 h-32 md:w-48 md:h-48 shadow-2xl",
          { "animate-spin-slow": isPlaying },
        ]}
        src={latestPlaying.art}
        alt={latestPlaying.song}
        transition:name="art"
      />
      <div class="flex flex-col space-y-2">
        <h1 class="text-sm font-bold tracking-wide" transition:name="title">
          Rub's Listening - {page}
        </h1>
        <h2
          class="text-2xl md:text-3xl lg:text-5xl font-bold"
          transition:name="title-song"
        >
          {latestPlaying.song}
        </h2>
        <p
          class="text-lg md:text-xl text-gray-300"
          transition:name="title-artist"
        >
          by: {latestPlaying.artist}
        </p>
      </div>
    </section>

    <section class="p-8">
      <div class="space-y-3 text-gray-400">
        <div class="grid grid-cols-8">
          <span class="text-center">#</span>
          <div class="flex col-span-4 space-x-4 items-center">
            <span class="text-center">Title</span>
          </div>
          <div class="hidden md:block col-span-2">Album</div>
          <div
            class="justify-self-end"
            aria-label="Song Length"
            title="Song Length"
          >
            <ClockIcon />
          </div>
        </div>
        <hr class="border-gray-600" />
        <Song
          song={latestPlaying}
          idx={0}
          isPlaying={page === 1 && isPlaying}
        />
        {rest.map((song, i) => <Song {song} idx={i + 1} />)}
      </div>
    </section>
  </div>
</Layout>
